service: aws-appsync-chat
frameworkVersion: '3'

custom:
  ddbTableName: 'chatTable'
  appSync:
    - name: 'chatRoom'
      schema: schema.api.graphql
      authenticationType: AWS_LAMBDA
      lambdaAuthorizerConfig:
        functionName: lambdaAuthorizer
      mappingTemplatesLocation: mapping-templates
      mappingTemplates:
        - dataSource: ChatRoom
          type: Mutation
          field: sendChat
          request: "Mutation.sendChat.request.vtl"
          response: "Mutation.sendChat.response.vtl"
        - dataSource: ChatRoom
          type: Query
          field: getChatRoom
          request: "Query.getChatRoom.request.vtl"
          response: "Query.getChatRoom.response.vtl"
        - dataSource: ChatRoom
          type: Query
          field: getDMList
          request: "Query.getDMList.request.vtl"
          response: "Query.getDMList.response.vtl"
      dataSources:
        - type: AMAZON_DYNAMODB
          name: ChatRoom
          config:
            tableName: ${self:custom.ddbTableName}

plugins:
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-1
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  environment:
    TABLE_NAME: ${self:custom.ddbTableName}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - lambda:InvokeFunction
          Resource:
            - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:custom.ddbTableName}'
            - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:custom.ddbTableName}/*'


resources:
  Resources:
    chatTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.ddbTableName}
        AttributeDefinitions:
          - AttributeName: roomType
            AttributeType: S
          - AttributeName: roomId
            AttributeType: S
          - AttributeName: chatId
            AttributeType: S
        KeySchema:
          - AttributeName: roomType
            KeyType: HASH
          - AttributeName: roomId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: dmIndex
            KeySchema:
              - AttributeName: roomType
                KeyType: HASH
              - AttributeName: chatId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

functions:
  lambdaAuthorizer:
    handler: functions/lambdaAuthorizer.handler
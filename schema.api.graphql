schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  getChatRoom(friendUsername: String!, nextToken: String): Chat
  getDMList(limit: Int, nextToken: String): Chat
}

type Mutation {
  sendChat(input: MessageInput!): ChatMessage
  register(input: RegisterForm!): registerData
  @aws_api_key
  login(input: LoginForm!): loginData
  @aws_api_key
}

type Subscription {
  newChat(receiver: String!): ChatMessage
    @aws_subscribe(mutations: ["sendChat"])
}

input MessageInput {
  receiver: String!
  message: String!
}

input RegisterForm {
  username: String!
  password: String!
  repeatPassword: String!
}

input LoginForm {
  username: String!
  password: String!
}

type ChatMessage {
  roomType: String
  roomId: String
  sender: String
  receiver: String
  message: String
  sendAt: AWSDateTime
  chatId: String
}

type registerData @aws_api_key {
  username: String!
  error: Int!
  message: String!
}

type loginData @aws_api_key {
  sessionToken: String!
  error: Int!
  message: String!
}

type Chat {
  chats: [ChatMessage]
  nextToken: String
}